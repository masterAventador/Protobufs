// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: http/HttpPayload.proto
// Protobuf C++ Version: 5.26.1

#include "http/HttpPayload.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Http {

inline constexpr Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        msg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        body_{nullptr},
        cmd_{static_cast< ::Http::CMD >(0)},
        code_{static_cast< ::Http::CODE >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Response::Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseDefaultTypeInternal() {}
  union {
    Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseDefaultTypeInternal _Response_default_instance_;

inline constexpr Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        body_{nullptr},
        cmd_{static_cast< ::Http::CMD >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Request::Request(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestDefaultTypeInternal() {}
  union {
    Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestDefaultTypeInternal _Request_default_instance_;
}  // namespace Http
static ::_pb::Metadata file_level_metadata_http_2fHttpPayload_2eproto[2];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_http_2fHttpPayload_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_http_2fHttpPayload_2eproto = nullptr;
const ::uint32_t
    TableStruct_http_2fHttpPayload_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::Http::Request, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Http::Request, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Http::Request, _impl_.cmd_),
        PROTOBUF_FIELD_OFFSET(::Http::Request, _impl_.body_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::Http::Response, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Http::Response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Http::Response, _impl_.cmd_),
        PROTOBUF_FIELD_OFFSET(::Http::Response, _impl_.code_),
        PROTOBUF_FIELD_OFFSET(::Http::Response, _impl_.msg_),
        PROTOBUF_FIELD_OFFSET(::Http::Response, _impl_.body_),
        ~0u,
        ~0u,
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::Http::Request)},
        {12, 24, -1, sizeof(::Http::Response)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::Http::_Request_default_instance_._instance,
    &::Http::_Response_default_instance_._instance,
};
const char descriptor_table_protodef_http_2fHttpPayload_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\026http/HttpPayload.proto\022\004Http\032\031google/p"
    "rotobuf/any.proto\"E\n\007Request\022\026\n\003cmd\030\001 \001("
    "\0162\t.Http.CMD\022\"\n\004body\030\002 \001(\0132\024.google.prot"
    "obuf.Any\"m\n\010Response\022\026\n\003cmd\030\001 \001(\0162\t.Http"
    ".CMD\022\030\n\004code\030\002 \001(\0162\n.Http.CODE\022\013\n\003msg\030\003 "
    "\001(\t\022\"\n\004body\030\004 \001(\0132\024.google.protobuf.Any*"
    "\036\n\003CMD\022\014\n\010Register\020\000\022\t\n\005Login\020\001*\037\n\004CODE\022"
    "\013\n\007Success\020\000\022\n\n\006Failed\020\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_http_2fHttpPayload_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::absl::once_flag descriptor_table_http_2fHttpPayload_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_http_2fHttpPayload_2eproto = {
    false,
    false,
    312,
    descriptor_table_protodef_http_2fHttpPayload_2eproto,
    "http/HttpPayload.proto",
    &descriptor_table_http_2fHttpPayload_2eproto_once,
    descriptor_table_http_2fHttpPayload_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_http_2fHttpPayload_2eproto::offsets,
    file_level_metadata_http_2fHttpPayload_2eproto,
    file_level_enum_descriptors_http_2fHttpPayload_2eproto,
    file_level_service_descriptors_http_2fHttpPayload_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_http_2fHttpPayload_2eproto_getter() {
  return &descriptor_table_http_2fHttpPayload_2eproto;
}
namespace Http {
const ::google::protobuf::EnumDescriptor* CMD_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_http_2fHttpPayload_2eproto);
  return file_level_enum_descriptors_http_2fHttpPayload_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t CMD_internal_data_[] = {
    131072u, 0u, };
bool CMD_IsValid(int value) {
  return 0 <= value && value <= 1;
}
const ::google::protobuf::EnumDescriptor* CODE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_http_2fHttpPayload_2eproto);
  return file_level_enum_descriptors_http_2fHttpPayload_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t CODE_internal_data_[] = {
    131072u, 0u, };
bool CODE_IsValid(int value) {
  return 0 <= value && value <= 1;
}
// ===================================================================

class Request::_Internal {
 public:
  using HasBits = decltype(std::declval<Request>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Request, _impl_._has_bits_);
};

void Request::clear_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.body_ != nullptr) _impl_.body_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Request::Request(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Http.Request)
}
inline PROTOBUF_NDEBUG_INLINE Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Request::Request(
    ::google::protobuf::Arena* arena,
    const Request& from)
    : ::google::protobuf::Message(arena) {
  Request* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.body_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.body_)
                        : nullptr;
  _impl_.cmd_ = from._impl_.cmd_;

  // @@protoc_insertion_point(copy_constructor:Http.Request)
}
inline PROTOBUF_NDEBUG_INLINE Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, body_),
           0,
           offsetof(Impl_, cmd_) -
               offsetof(Impl_, body_) +
               sizeof(Impl_::cmd_));
}
Request::~Request() {
  // @@protoc_insertion_point(destructor:Http.Request)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Request::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.body_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Request::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Request, _impl_._cached_size_),
              false,
          },
          &Request::MergeImpl,
          &Request::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:Http.Request)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.body_ != nullptr);
    _impl_.body_->Clear();
  }
  _impl_.cmd_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Request::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Request::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Request, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Request_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Http::Request>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Any body = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Request, _impl_.body_)}},
    // .Http.CMD cmd = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Request, _impl_.cmd_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Request, _impl_.cmd_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Http.CMD cmd = 1;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.cmd_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .google.protobuf.Any body = 2;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.body_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
  }},
};

::uint8_t* Request::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Http.Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .Http.CMD cmd = 1;
  if (this->_internal_cmd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_cmd(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any body = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.body_, _impl_.body_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Http.Request)
  return target;
}

::size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Http.Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any body = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.body_);
  }

  // .Http.CMD cmd = 1;
  if (this->_internal_cmd() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_cmd());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Request::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Request*>(&to_msg);
  auto& from = static_cast<const Request&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:Http.Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.body_ != nullptr);
    if (_this->_impl_.body_ == nullptr) {
      _this->_impl_.body_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.body_);
    } else {
      _this->_impl_.body_->MergeFrom(*from._impl_.body_);
    }
  }
  if (from._internal_cmd() != 0) {
    _this->_impl_.cmd_ = from._impl_.cmd_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Http.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Request::IsInitialized() const {
  return true;
}

void Request::InternalSwap(Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Request, _impl_.cmd_)
      + sizeof(Request::_impl_.cmd_)
      - PROTOBUF_FIELD_OFFSET(Request, _impl_.body_)>(
          reinterpret_cast<char*>(&_impl_.body_),
          reinterpret_cast<char*>(&other->_impl_.body_));
}

::google::protobuf::Metadata Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_http_2fHttpPayload_2eproto_getter,
                                   &descriptor_table_http_2fHttpPayload_2eproto_once,
                                   file_level_metadata_http_2fHttpPayload_2eproto[0]);
}
// ===================================================================

class Response::_Internal {
 public:
  using HasBits = decltype(std::declval<Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Response, _impl_._has_bits_);
};

void Response::clear_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.body_ != nullptr) _impl_.body_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Response::Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Http.Response)
}
inline PROTOBUF_NDEBUG_INLINE Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        msg_(arena, from.msg_) {}

Response::Response(
    ::google::protobuf::Arena* arena,
    const Response& from)
    : ::google::protobuf::Message(arena) {
  Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.body_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.body_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cmd_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, cmd_),
           offsetof(Impl_, code_) -
               offsetof(Impl_, cmd_) +
               sizeof(Impl_::code_));

  // @@protoc_insertion_point(copy_constructor:Http.Response)
}
inline PROTOBUF_NDEBUG_INLINE Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        msg_(arena) {}

inline void Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, body_),
           0,
           offsetof(Impl_, code_) -
               offsetof(Impl_, body_) +
               sizeof(Impl_::code_));
}
Response::~Response() {
  // @@protoc_insertion_point(destructor:Http.Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.msg_.Destroy();
  delete _impl_.body_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Response::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Response, _impl_._cached_size_),
              false,
          },
          &Response::MergeImpl,
          &Response::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Http.Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.body_ != nullptr);
    _impl_.body_->Clear();
  }
  ::memset(&_impl_.cmd_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.code_) -
      reinterpret_cast<char*>(&_impl_.cmd_)) + sizeof(_impl_.code_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 25, 2> Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Response, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Http::Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Any body = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Response, _impl_.body_)}},
    // .Http.CMD cmd = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Response, _impl_.cmd_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Response, _impl_.cmd_)}},
    // .Http.CODE code = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Response, _impl_.code_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Response, _impl_.code_)}},
    // string msg = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Response, _impl_.msg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Http.CMD cmd = 1;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.cmd_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .Http.CODE code = 2;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string msg = 3;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.msg_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Any body = 4;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.body_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
    "\15\0\0\3\0\0\0\0"
    "Http.Response"
    "msg"
  }},
};

::uint8_t* Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Http.Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .Http.CMD cmd = 1;
  if (this->_internal_cmd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_cmd(), target);
  }

  // .Http.CODE code = 2;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_code(), target);
  }

  // string msg = 3;
  if (!this->_internal_msg().empty()) {
    const std::string& _s = this->_internal_msg();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Http.Response.msg");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any body = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.body_, _impl_.body_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Http.Response)
  return target;
}

::size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Http.Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 3;
  if (!this->_internal_msg().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_msg());
  }

  // .google.protobuf.Any body = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.body_);
  }

  // .Http.CMD cmd = 1;
  if (this->_internal_cmd() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_cmd());
  }

  // .Http.CODE code = 2;
  if (this->_internal_code() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Response*>(&to_msg);
  auto& from = static_cast<const Response&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:Http.Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.body_ != nullptr);
    if (_this->_impl_.body_ == nullptr) {
      _this->_impl_.body_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.body_);
    } else {
      _this->_impl_.body_->MergeFrom(*from._impl_.body_);
    }
  }
  if (from._internal_cmd() != 0) {
    _this->_impl_.cmd_ = from._impl_.cmd_;
  }
  if (from._internal_code() != 0) {
    _this->_impl_.code_ = from._impl_.code_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Http.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Response::IsInitialized() const {
  return true;
}

void Response::InternalSwap(Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, &other->_impl_.msg_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Response, _impl_.code_)
      + sizeof(Response::_impl_.code_)
      - PROTOBUF_FIELD_OFFSET(Response, _impl_.body_)>(
          reinterpret_cast<char*>(&_impl_.body_),
          reinterpret_cast<char*>(&other->_impl_.body_));
}

::google::protobuf::Metadata Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_http_2fHttpPayload_2eproto_getter,
                                   &descriptor_table_http_2fHttpPayload_2eproto_once,
                                   file_level_metadata_http_2fHttpPayload_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Http
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_http_2fHttpPayload_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
